#ifndef COMMAND_HANDLER_H
#define COMMAND_HANDLER_H

#include "sdk_errors.h"

#include "session.h"
#include "segment_layer.h"
#include "application_layer.h"

#define SSM2_CMD_UPDATE_CONF_ADV_TAKE_EFFECT_ON_REBOOT

typedef enum
{
    OP_ITEM_CREATE_REGISTRATION     = OP_ITEM_CODE(SSM2_OP_CODE_CREATE,     SSM2_ITEM_CODE_REGISTRATION),
    OP_ITEM_DELETE_REGISTRATION     = OP_ITEM_CODE(SSM2_OP_CODE_DELETE,     SSM2_ITEM_CODE_REGISTRATION),
    OP_ITEM_SYNC_LOGIN              = OP_ITEM_CODE(SSM2_OP_CODE_SYNC,       SSM2_ITEM_CODE_LOGIN),
    OP_ITEM_RESPONSE_LOGIN          = OP_ITEM_CODE(SSM2_OP_CODE_RESPONSE,   SSM2_ITEM_CODE_LOGIN),
    OP_ITEM_PUBLISH_LOGIN           = OP_ITEM_CODE(SSM2_OP_CODE_PUBLISH,    SSM2_ITEM_CODE_LOGIN),
    OP_ITEM_ASYNC_LOCK              = OP_ITEM_CODE(SSM2_OP_CODE_ASYNC,      SSM2_ITEM_CODE_LOCK),
    OP_ITEM_ASYNC_UNLOCK            = OP_ITEM_CODE(SSM2_OP_CODE_ASYNC,      SSM2_ITEM_CODE_UNLOCK),
    OP_ITEM_ASYNC_STOP              = OP_ITEM_CODE(SSM2_OP_CODE_ASYNC,      SSM2_ITEM_CODE_STOP),
    OP_ITEM_READ_MECH_STATUS        = OP_ITEM_CODE(SSM2_OP_CODE_READ,       SSM2_ITEM_CODE_MECH_STATUS),
    OP_ITEM_UPDATE_MECH_SETTING     = OP_ITEM_CODE(SSM2_OP_CODE_UPDATE,     SSM2_ITEM_CODE_MECH_SETTING),
    OP_ITEM_READ_MECH_SETTING       = OP_ITEM_CODE(SSM2_OP_CODE_READ,       SSM2_ITEM_CODE_MECH_SETTING),
    OP_ITEM_UPDATE_AUTOLOCK         = OP_ITEM_CODE(SSM2_OP_CODE_UPDATE,     SSM2_ITEM_CODE_AUTOLOCK),
    OP_ITEM_READ_AUTOLOCK           = OP_ITEM_CODE(SSM2_OP_CODE_READ,       SSM2_ITEM_CODE_AUTOLOCK),
    OP_ITEM_CREATE_USER             = OP_ITEM_CODE(SSM2_OP_CODE_CREATE,     SSM2_ITEM_CODE_USER),
    OP_ITEM_READ_USER               = OP_ITEM_CODE(SSM2_OP_CODE_READ,       SSM2_ITEM_CODE_USER),
    OP_ITEM_UPDATE_USER             = OP_ITEM_CODE(SSM2_OP_CODE_UPDATE,     SSM2_ITEM_CODE_USER),
    OP_ITEM_DELETE_USER             = OP_ITEM_CODE(SSM2_OP_CODE_DELETE,     SSM2_ITEM_CODE_USER),
    OP_ITEM_READ_HISTORY            = OP_ITEM_CODE(SSM2_OP_CODE_READ,       SSM2_ITEM_CODE_HISTORY),
    OP_ITEM_DELETE_HISTORY          = OP_ITEM_CODE(SSM2_OP_CODE_DELETE,     SSM2_ITEM_CODE_HISTORY),
    OP_ITEM_READ_ENABLE_DFU         = OP_ITEM_CODE(SSM2_OP_CODE_READ,       SSM2_ITEM_CODE_ENABLE_DFU),
    OP_ITEM_UPDATE_ENABLE_DFU       = OP_ITEM_CODE(SSM2_OP_CODE_UPDATE,     SSM2_ITEM_CODE_ENABLE_DFU),
    OP_ITEM_READ_TIME               = OP_ITEM_CODE(SSM2_OP_CODE_READ,       SSM2_ITEM_CODE_TIME),
    OP_ITEM_UPDATE_TIME             = OP_ITEM_CODE(SSM2_OP_CODE_UPDATE,     SSM2_ITEM_CODE_TIME),
    OP_ITEM_SYNC_SERVER_ADV_KICK    = OP_ITEM_CODE(SSM2_OP_CODE_SYNC,       SSM2_ITEM_CODE_SERVER_ADV_KICK),
    OP_ITEM_READ_VERSION            = OP_ITEM_CODE(SSM2_OP_CODE_READ,       SSM2_ITEM_CODE_VERSION),
    OP_ITEM_READ_SESAME_TOKEN       = OP_ITEM_CODE(SSM2_OP_CODE_READ,       SSM2_ITEM_CODE_SESAME_TOKEN),
    OP_ITEM_PUBLISH_INITIAL         = OP_ITEM_CODE(SSM2_OP_CODE_PUBLISH,    SSM2_ITEM_CODE_INITIAL),
    OP_ITEM_READ_BLE_ADV_PARAM      = OP_ITEM_CODE(SSM2_OP_CODE_READ,       SSM2_ITEM_CODE_BLE_ADV_PARAM),
    OP_ITEM_UPDATE_BLE_ADV_PARAM    = OP_ITEM_CODE(SSM2_OP_CODE_UPDATE,     SSM2_ITEM_CODE_BLE_ADV_PARAM),
    OP_ITEM_READ_IR_ER              = OP_ITEM_CODE(SSM2_OP_CODE_READ,       SSM2_ITEM_CODE_IR_ER),
    OP_ITEM_UPDATE_TIME_NOSIG       = OP_ITEM_CODE(SSM2_OP_CODE_UPDATE,     SSM2_ITEM_CODE_TIME_NOSIG),
} op_item_code_e;

typedef enum
{
    CMD_RESULT_SUCCESS,
    CMD_RESULT_INVALID_FORMAT,
    CMD_RESULT_NOT_SUPPORTED,
    CMD_RESULT_STORAGE_FAIL,
    CMD_RESULT_INVALID_SIG,
    CMD_RESULT_NOT_FOUND,
    CMD_RESULT_UNKNOWN,
    CMD_RESULT_BUSY,
    CMD_RESULT_INVALID_PARAM,
    CMD_RESULT_MAX
} cmd_result_e;
STATIC_ASSERT(CMD_RESULT_MAX < (UINT16_MAX >> 4));

typedef struct ssm2_command_s
{
    session_t*              session;
    uint16_t                op_item_code;
    uint16_t                len;
    uint8_t*                data;
    ssm2_seg_parsing_type_e parsing_type;
} ssm2_command_t;

void handle_command(ssm2_command_t const * cmd);

#endif
